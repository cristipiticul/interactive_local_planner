<launch>
  <arg name="3d_sensor" default="$(env TURTLEBOT_3D_SENSOR)"/>
  <arg name="gazebo_gui" default="false"/>

  <include file="$(find turtlebot_gazebo)/launch/turtlebot_world.launch">
    <arg name="gui" value="$(arg gazebo_gui)"/>
  </include>

  <!-- Map server -->
  <arg name="map_file" default="$(find interactive_local_planner)/map/sim/map.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

  <include file="$(find turtlebot_navigation)/launch/includes/velocity_smoother.launch.xml"/>
  <include file="$(find turtlebot_navigation)/launch/includes/safety_controller.launch.xml"/>

  <!-- AMCL -->
  <arg name="custom_amcl_launch_file" default="$(find turtlebot_navigation)/launch/includes/amcl/$(arg 3d_sensor)_amcl.launch.xml"/>
  <arg name="initial_pose_x" default="0.0"/> <!-- Use 17.0 for willow's map in simulation -->
  <arg name="initial_pose_y" default="0.0"/> <!-- Use 17.0 for willow's map in simulation -->
  <arg name="initial_pose_a" default="0.0"/>
  <include file="$(arg custom_amcl_launch_file)">
    <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
    <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
    <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
  </include>

  <!-- Move base -->
  <include file="$(find interactive_local_planner)/launch/includes/move_base.launch"/>

  <!-- RViz -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find interactive_local_planner)/rviz/navigation.rviz"/>

  <arg name="moving_obstacle_model_name" value="moving_obstacle"/>
  <node name="moving_obstacle_spawner" pkg="gazebo_ros" type="spawn_model" output="screen"
    args="-file $(find interactive_local_planner_simulated_obstacle)/models/moving_obstacle/model.sdf -sdf -x -1.0 -y 0 -z 0.3 -Y 1.5757 -model $(arg moving_obstacle_model_name)" />
  
  <node name="obstacle_controller" pkg="interactive_local_planner_simulated_obstacle"
    type="obstacle_controller.py" output="screen">
    <!-- The obstacle moves if the robot gets closer than this. -->
    <param name="distance_threshold" value="0.6"/>
    <!-- The distance between robot and obstacle is determined using these links -->
    <param name="robot_link" value="mobile_base::base_footprint"/>
    <param name="obstacle_link" value="$(arg moving_obstacle_model_name)::chassis"/>
    <!-- Which joints to move when the robot gets close -->
    <param name="joints_to_move" value='["$(arg moving_obstacle_model_name)::left_wheel_hinge", "$(arg moving_obstacle_model_name)::right_wheel_hinge"]'/>

    <!-- The obstacle_link's position will be published to TF -->
    <param name="robot_tf_frame" value="base_footprint"/> <!-- Must match robot_link param -->
    <param name="published_tf_frame" value="ar_marker_11"/>
  </node>
</launch>
